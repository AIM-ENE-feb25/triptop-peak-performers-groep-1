@startuml
title C4 Component Diagram - Triptop applicatie

class AuthenticationController {
    - authenticateService: AuthenticateService
    - AUTHENTICATIONMETHOD: AuthenticationMethods
    - token: Token
    + authenticate(endpoint: String, httpMethod: String, credentials: Credentials): ResponseEntity<String>
    + authorize(endpoint: String, httpMethod: String): ResponseEntity<String>
}

class AuthenticationService {
    - IAuthenticateStrategie: IAuthenticateStrategie
    + setAuthenticationMethod(method: AuthenticationMethods): void
    + authenticate(endpoint: String, httpMethod: String, credentials: Credentials): Token
    + authorize(endpoint: String, httpMethod: String, token: Token): Boolean
}

interface IAuthenticateStrategie {
    + authenticate(endpoint: String, httpMethod: String, credentials: Credentials): Token
}

class UsernameAuthentication {
    - CORRECTUSERNAME: String
    - CORRECTPASSWORD: String
    + authenticate(endpoint: String, httpMethod: String, credentials: Credentials): Token
    - generateToken(): Token
}

class KeyAuthentication {
    - CORRECTKEY: String
    + authenticate(endpoint: String, httpMethod: String, credentials: Credentials): Token
    - generateToken(): Token
}

class SecretAuthentication {
    - CORRECTSECRET: String
    + authenticate(endpoint: String, httpMethod: String, credentials: Credentials): Token
    - generateToken(): Token
}

class Credentials {
    - username: String
    - password: String
    - key: String
    - secret: String
    + toString(): String
}

class Token {
    - value: String
    - expireDate: Date
    + toString(): String
}

enum AuthenticationMethods {
    KEY
    SECRET
    USERNAME_PASSWORD
}

AuthenticationController --> AuthenticationService: Roept functies aan in de
AuthenticationService --> IAuthenticateStrategie: Roept functies aan van de 
IAuthenticateStrategie <|-- UsernameAuthentication: Implementeert 
IAuthenticateStrategie <|-- KeyAuthentication: Implementeert
IAuthenticateStrategie <|-- SecretAuthentication: Implementeert
UsernameAuthentication --> Token: Genereert bij success een 
KeyAuthentication --> Token: Genereert bij success een
SecretAuthentication --> Token: Genereert bij success een
AuthenticationService --> AuthenticationMethods: Kiest de juiste authenticatiemethode op basis van de 
AuthenticationController --> Credentials: Gebruikers loggen in met hun

@enduml